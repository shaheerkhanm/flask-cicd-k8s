name: CI/CD Pipeline

on:
  push:
    branches: [dev]

env:
  IMAGE_NAME: flask-cicd-app

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python Dependencies
      run: |
        pip install -r requirements.txt

    - name: Lint Code with flake8
      run: |
        pip install flake8
        flake8 .

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/app" >> $GITHUB_ENV

    - name: Run Unit Tests with pytest
      run: |
        pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker Image (with linux/amd64 platform)
      run: |
        docker build --platform linux/amd64 \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker Images
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Test /health endpoint in container
      run: |
        docker run -d -p 5000:5000 --name flask-app ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        sleep 5
        curl --fail http://localhost:5000/health
        docker stop flask-app

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Validate Kubernetes Access
      run: |
        kubectl config current-context
        kubectl cluster-info
        kubectl get nodes

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/

    - name: Verify Deployment Rollout
      run: |
        kubectl rollout status deployment/flask-app
